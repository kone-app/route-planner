name: CI-CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
  

jobs:
  build-test-sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Python for Lambda code + tests
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # Node.js for AWS CDK CLI
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install CDK CLI
        run: npm install -g aws-cdk

      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r cdk/requirements-cdk.txt
          pip install pytest pytest-cov

      - name: Run unit tests with coverage
        run: |
          source venv/bin/activate
          pytest --maxfail=1 --disable-warnings -q --cov=src --cov-report=xml

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectKey=route-planner
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.python.coverage.reportPaths=coverage.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  aws-deploy:
    needs: build-test-sonar
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install CDK CLI
        run: npm install -g aws-cdk

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r cdk/requirements-cdk.txt

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1
      
      - name: CDK Bootstrap
        run: cdk bootstrap aws://$AWS_ACCOUNT_ID/$AWS_DEFAULT_REGION
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1


      #- name: CDK Deploy
      #  run: |
      #    cd cdk
      #    cdk deploy --require-approval never

      - name: Deploy with CDK
        run: cdk deploy --app "python3 cdk/app.py" --require-approval never
        env:
          DIGITRANSIT_API_KEY: ${{ secrets.DIGITRANSIT_API_KEY }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
          TO_EMAIL: ${{ secrets.TO_EMAIL }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          GEO_CODING_URL: ${{ secrets.GEO_CODING_URL }}
          ROUTING_URL: ${{ secrets.ROUTING_URL }}

